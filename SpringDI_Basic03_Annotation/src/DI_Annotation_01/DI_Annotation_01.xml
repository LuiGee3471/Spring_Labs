<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
  <!--
  1단계: XML 설정 기반으로 DI 작업 
  <bean id="monitorViewer" class="DI_Annotation_01.MonitorViewer">
    <property name="recorder">
      <bean class="DI_Annotation_01.Recorder"></bean>
    </property>
  </bean>
  -->
  <!--
    2단계: Annotation 기반으로 DI 작업
    Annotation은 Java API, Spring Framework 제공
    @Autowired > Type기반
    목적 : 의존관계를 자동설정할 때 사용하며 [타입을 이용]하여 의존하는 객체를 삽입해 준다. 
    그러므로 (IOC Container) 해당 타입의 빈객체가 존재하지 않거나 또는 2개 이상 존재할 경우 
    스프링은 예외를 발생시키게 된다.
    설정 위치: 생성자, 필드, 메소드(굳이 setter 메소드가 아니어도 된다)
    
    **@Autowired 선행 조건
    org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor
    Bean 객체로 등록되어있어야 Autowired가 정상 작동
    <bean id="" class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean>
    대신
    <context:annotation-config /> 한 방이면 해결
    Annotation 필요한 모든 빈 객체를 자동 등록
    단점) 사용하지 않는 bean도 자동 등록
    
    ** @Autowired 정상 동작하지 않는 경우
    1. Injection되는 타입의 bean 객체가 IoC 컨테이너 안에 없는 경우(exception)
    2. IoC 컨테이너 안에 같은 타입의 객체가 여러 개 존재할 경우
    3. IoC 컨테이너 안에 같은 타입의 객체가 여러 개 존재하더라도 
        함수의 parameter 이름과 동일한 id를 가진 bean이 있으면 정상 동작
        원칙) @Resource를 사용  
   -->
   <context:annotation-config />
   <bean id="recorder" class="DI_Annotation_01.Recorder"></bean>
   <bean id="monitorViewer" class="DI_Annotation_01.MonitorViewer"></bean>
   <bean id="a" class="DI_Annotation_01.Recorder"></bean>
   <bean id="b" class="DI_Annotation_01.Recorder"></bean>
   <bean id="c" class="DI_Annotation_01.Recorder"></bean>
</beans>