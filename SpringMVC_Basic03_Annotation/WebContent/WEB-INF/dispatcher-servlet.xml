<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
                      http://www.springframework.org/schema/beans/spring-beans.xsd
                      http://www.springframework.org/schema/context 
                      http://www.springframework.org/schema/context/spring-context.xsd">

  <!-- XML 파일 IoC 컨테이너에 적재될 bean 객체 생성과 주입 -->

  <!-- 
    의존 관계에 필요한 Bean 객체 자동 생성
    @Autowired, @Resource 동작하기 위한 Bean 객체 
   -->
  <context:annotation-config />
  <!-- 공통 빈 -->
  <bean id="internalResourceViewResolver"
    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="prefix">
      <value>/WEB-INF/views/</value>
    </property>
    <property name="suffix">
      <value>.jsp</value>
    </property>
  </bean>
  
  <!--
    component-scan으로 작업하기 설명 
   -->
  <bean id="helloController" class="com.controller.HelloController"></bean>
  
  <!-- TEST_2 -->
  <!--
    하나의 요청 주소로 GET 방식의 요청과 POST 방식의 요청을 처리
    화면, 처리 (로그인 화면, 로그인 처리; 글쓰기 화면, 글쓰기 처리)
   -->
  <bean class="com.controller.NewArticleController"></bean>
  <bean class="com.service.ArticleService"></bean>
  
  <!-- TEST_3 -->
  <bean class="com.controller.OrderController"></bean>
  
  <!-- TEST_4 -->
  <!--
  parameter 설정하기 (@RequestParam 연습하기) 
   -->
  <bean class="com.controller.SearchController"></bean>
  <!-- TEST 5 -->
  <!--
  @CookieValue annotation 사용하기 
   -->
  <bean class="com.controller.CookieController"></bean>
  
  <!-- TEST_6 -->
  <!--
  파일 업로드 
  org.springframework.web.multipart.commons.CommonsMultipartResolver
  org.springframework.web.multipart.commons.CommonsMultipartFile
  CommonsMultipartFile을 사용하기 위해서는 CommonsMultipartResolver Bean 객체가 IoC 컨테이너 안에 있어야 함
  
  CommonsMultipartResolver 역할: Upload 파일의 정보를 관리(크기, 이름 등)
  
  의존 객체:
  com.springsource.org.apache.commons.fileupload
  com.springsource.org.apache.commons.io
  -->
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="10485760" />
  </bean>
  <bean class="com.controller.ImageController"></bean>
  <!--
  <context:component-scan base-package="com.controller" />
  선언부에 있으면
  @Component
  @Repository
  @Service
  @Controller
  
  annotation을 가진 class에 대해서
  <bean id="">를 별도로 생성할 필요가 없다
  자동으로 Bean 객체 생성 
   -->
</beans>
